// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NetflowAlertModulesCollectorAttributeV3 netflow alert modules collector attribute v3
//
// swagger:model NetflowAlertModulesCollectorAttributeV3
type NetflowAlertModulesCollectorAttributeV3 struct {

	// alert enable
	AlertEnable bool `json:"alertEnable,omitempty"`

	// data duration
	DataDuration string `json:"dataDuration,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// netflow filters
	NetflowFilters string `json:"netflowFilters,omitempty"`

	// threshold value unit
	ThresholdValueUnit string `json:"thresholdValueUnit,omitempty"`

	// top threshold expression
	TopThresholdExpression string `json:"topThresholdExpression,omitempty"`

	// traffic type
	TrafficType string `json:"trafficType,omitempty"`

	// type of alert
	TypeOfAlert string `json:"typeOfAlert,omitempty"`
}

// Name gets the name of this subtype
func (m *NetflowAlertModulesCollectorAttributeV3) Name() string {
	return "NetflowAlertModulesCollectorAttributeV3"
}

// SetName sets the name of this subtype
func (m *NetflowAlertModulesCollectorAttributeV3) SetName(val string) {
}

// UnmarshalJSON unmarshals this object with a polymorphic type from a JSON structure
func (m *NetflowAlertModulesCollectorAttributeV3) UnmarshalJSON(raw []byte) error {
	var data struct {

		// alert enable
		AlertEnable bool `json:"alertEnable,omitempty"`

		// data duration
		DataDuration string `json:"dataDuration,omitempty"`

		// enabled
		Enabled bool `json:"enabled,omitempty"`

		// netflow filters
		NetflowFilters string `json:"netflowFilters,omitempty"`

		// threshold value unit
		ThresholdValueUnit string `json:"thresholdValueUnit,omitempty"`

		// top threshold expression
		TopThresholdExpression string `json:"topThresholdExpression,omitempty"`

		// traffic type
		TrafficType string `json:"trafficType,omitempty"`

		// type of alert
		TypeOfAlert string `json:"typeOfAlert,omitempty"`
	}
	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&data); err != nil {
		return err
	}

	var base struct {
		/* Just the base type fields. Used for unmashalling polymorphic types.*/

		Name string `json:"name"`
	}
	buf = bytes.NewBuffer(raw)
	dec = json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&base); err != nil {
		return err
	}

	var result NetflowAlertModulesCollectorAttributeV3

	if base.Name != result.Name() {
		/* Not the type we're looking for. */
		return errors.New(422, "invalid name value: %q", base.Name)
	}

	result.AlertEnable = data.AlertEnable
	result.DataDuration = data.DataDuration
	result.Enabled = data.Enabled
	result.NetflowFilters = data.NetflowFilters
	result.ThresholdValueUnit = data.ThresholdValueUnit
	result.TopThresholdExpression = data.TopThresholdExpression
	result.TrafficType = data.TrafficType
	result.TypeOfAlert = data.TypeOfAlert

	*m = result

	return nil
}

// MarshalJSON marshals this object with a polymorphic type to a JSON structure
func (m NetflowAlertModulesCollectorAttributeV3) MarshalJSON() ([]byte, error) {
	var b1, b2, b3 []byte
	var err error
	b1, err = json.Marshal(struct {

		// alert enable
		AlertEnable bool `json:"alertEnable,omitempty"`

		// data duration
		DataDuration string `json:"dataDuration,omitempty"`

		// enabled
		Enabled bool `json:"enabled,omitempty"`

		// netflow filters
		NetflowFilters string `json:"netflowFilters,omitempty"`

		// threshold value unit
		ThresholdValueUnit string `json:"thresholdValueUnit,omitempty"`

		// top threshold expression
		TopThresholdExpression string `json:"topThresholdExpression,omitempty"`

		// traffic type
		TrafficType string `json:"trafficType,omitempty"`

		// type of alert
		TypeOfAlert string `json:"typeOfAlert,omitempty"`
	}{

		AlertEnable: m.AlertEnable,

		DataDuration: m.DataDuration,

		Enabled: m.Enabled,

		NetflowFilters: m.NetflowFilters,

		ThresholdValueUnit: m.ThresholdValueUnit,

		TopThresholdExpression: m.TopThresholdExpression,

		TrafficType: m.TrafficType,

		TypeOfAlert: m.TypeOfAlert,
	})
	if err != nil {
		return nil, err
	}
	b2, err = json.Marshal(struct {
		Name string `json:"name"`
	}{

		Name: m.Name(),
	})
	if err != nil {
		return nil, err
	}

	return swag.ConcatJSON(b1, b2, b3), nil
}

// Validate validates this netflow alert modules collector attribute v3
func (m *NetflowAlertModulesCollectorAttributeV3) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this netflow alert modules collector attribute v3 based on the context it is used
func (m *NetflowAlertModulesCollectorAttributeV3) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *NetflowAlertModulesCollectorAttributeV3) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetflowAlertModulesCollectorAttributeV3) UnmarshalBinary(b []byte) error {
	var res NetflowAlertModulesCollectorAttributeV3
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
