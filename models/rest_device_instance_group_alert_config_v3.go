// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RestDeviceInstanceGroupAlertConfigV3 rest device instance group alert config v3
//
// swagger:model RestDeviceInstanceGroupAlertConfigV3
type RestDeviceInstanceGroupAlertConfigV3 struct {

	// ad adv setting enabled
	AdAdvSettingEnabled bool `json:"adAdvSettingEnabled,omitempty"`

	// The count that the alert must exist for this many poll cycles before the alert will be cleared
	// Format: byte
	AlertClearTransitionInterval strfmt.Base64 `json:"alertClearTransitionInterval,omitempty"`

	// alert enable
	AlertEnable bool `json:"alertEnable,omitempty"`

	// alert expr
	AlertExpr string `json:"alertExpr,omitempty"`

	// alert expr note
	AlertExprNote string `json:"alertExprNote,omitempty"`

	// The triggered alert level if we cannot collect data for this datapoint. The values can be 0-4 (0:unused alert, 1:alert ok, 2:warn alert, 2:error alert, 4:critical alert)
	// Format: byte
	AlertForNoData strfmt.Base64 `json:"alertForNoData,omitempty"`

	// The count that the alert must exist for this many poll cycles before it will be triggered
	// Format: byte
	AlertTransitionInterval strfmt.Base64 `json:"alertTransitionInterval,omitempty"`

	// critical ad adv setting
	CriticalAdAdvSetting string `json:"criticalAdAdvSetting,omitempty"`

	// enable anomaly alert suppression
	EnableAnomalyAlertSuppression string `json:"enableAnomalyAlertSuppression,omitempty"`

	// error ad adv setting
	ErrorAdAdvSetting string `json:"errorAdAdvSetting,omitempty"`

	// The count that the alert must exist for this many poll cycles before the alert will be cleared
	// Format: byte
	GlobalAlertClearTransitionInterval strfmt.Base64 `json:"globalAlertClearTransitionInterval,omitempty"`

	// The triggered alert level if we cannot collect data for this datapoint. The values can be 0-4 (0:unused alert, 1:alert ok, 2:warn alert, 2:error alert, 4:critical alert)
	// Format: byte
	GlobalAlertForNoData strfmt.Base64 `json:"globalAlertForNoData,omitempty"`

	// The count that the alert must exist for this many poll cycles before it will be triggered
	// Format: byte
	GlobalAlertTransitionInterval strfmt.Base64 `json:"globalAlertTransitionInterval,omitempty"`

	// warn ad adv setting
	WarnAdAdvSetting string `json:"warnAdAdvSetting,omitempty"`
}

// Validate validates this rest device instance group alert config v3
func (m *RestDeviceInstanceGroupAlertConfigV3) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this rest device instance group alert config v3 based on context it is used
func (m *RestDeviceInstanceGroupAlertConfigV3) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RestDeviceInstanceGroupAlertConfigV3) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestDeviceInstanceGroupAlertConfigV3) UnmarshalBinary(b []byte) error {
	var res RestDeviceInstanceGroupAlertConfigV3
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
