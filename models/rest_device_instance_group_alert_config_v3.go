// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RestDeviceInstanceGroupAlertConfigV3 rest device instance group alert config v3
//
// swagger:model RestDeviceInstanceGroupAlertConfigV3
type RestDeviceInstanceGroupAlertConfigV3 struct {

	// ad adv setting enabled
	AdAdvSettingEnabled bool `json:"adAdvSettingEnabled,omitempty"`

	// The count that the alert must exist for this many poll cycles before the alert will be cleared (0-60)
	// Example: 0
	AlertClearTransitionInterval int32 `json:"alertClearTransitionInterval,omitempty"`

	// alert enable
	AlertEnable bool `json:"alertEnable,omitempty"`

	// alert expr
	AlertExpr string `json:"alertExpr,omitempty"`

	// alert expr note
	AlertExprNote string `json:"alertExprNote,omitempty"`

	// The triggered alert level if we cannot collect data for this datapoint. The values can be 1-4 (1:no alert, 2:warn alert, 3:error alert, 4:critical alert)
	// Example: 1
	AlertForNoData int32 `json:"alertForNoData,omitempty"`

	// The count that the alert must exist for this many poll cycles before it will be triggered (0-60)
	// Example: 0
	AlertTransitionInterval int32 `json:"alertTransitionInterval,omitempty"`

	// critical ad adv setting
	CriticalAdAdvSetting string `json:"criticalAdAdvSetting,omitempty"`

	// enable anomaly alert suppression
	EnableAnomalyAlertSuppression string `json:"enableAnomalyAlertSuppression,omitempty"`

	// error ad adv setting
	ErrorAdAdvSetting string `json:"errorAdAdvSetting,omitempty"`

	// The count that the alert must exist for this many poll cycles before the alert will be cleared
	// Example: 0
	// Read Only: true
	GlobalAlertClearTransitionInterval int32 `json:"globalAlertClearTransitionInterval,omitempty"`

	// The triggered alert level if we cannot collect data for this datapoint. The values can be 1-4 (1:no alert, 2:warn alert, 3:error alert, 4:critical alert)
	// Example: 1
	// Read Only: true
	GlobalAlertForNoData int32 `json:"globalAlertForNoData,omitempty"`

	// The count that the alert must exist for this many poll cycles before it will be triggered
	// Example: 0
	// Read Only: true
	GlobalAlertTransitionInterval int32 `json:"globalAlertTransitionInterval,omitempty"`

	// warn ad adv setting
	WarnAdAdvSetting string `json:"warnAdAdvSetting,omitempty"`
}

// Validate validates this rest device instance group alert config v3
func (m *RestDeviceInstanceGroupAlertConfigV3) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this rest device instance group alert config v3 based on the context it is used
func (m *RestDeviceInstanceGroupAlertConfigV3) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateGlobalAlertClearTransitionInterval(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateGlobalAlertForNoData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateGlobalAlertTransitionInterval(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestDeviceInstanceGroupAlertConfigV3) contextValidateGlobalAlertClearTransitionInterval(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "globalAlertClearTransitionInterval", "body", int32(m.GlobalAlertClearTransitionInterval)); err != nil {
		return err
	}

	return nil
}

func (m *RestDeviceInstanceGroupAlertConfigV3) contextValidateGlobalAlertForNoData(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "globalAlertForNoData", "body", int32(m.GlobalAlertForNoData)); err != nil {
		return err
	}

	return nil
}

func (m *RestDeviceInstanceGroupAlertConfigV3) contextValidateGlobalAlertTransitionInterval(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "globalAlertTransitionInterval", "body", int32(m.GlobalAlertTransitionInterval)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RestDeviceInstanceGroupAlertConfigV3) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestDeviceInstanceGroupAlertConfigV3) UnmarshalBinary(b []byte) error {
	var res RestDeviceInstanceGroupAlertConfigV3
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
