// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLogicModuleMetadataParams creates a new GetLogicModuleMetadataParams object
// with the default values initialized.
func NewGetLogicModuleMetadataParams() *GetLogicModuleMetadataParams {
	var ()
	return &GetLogicModuleMetadataParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLogicModuleMetadataParamsWithTimeout creates a new GetLogicModuleMetadataParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLogicModuleMetadataParamsWithTimeout(timeout time.Duration) *GetLogicModuleMetadataParams {
	var ()
	return &GetLogicModuleMetadataParams{

		timeout: timeout,
	}
}

// NewGetLogicModuleMetadataParamsWithContext creates a new GetLogicModuleMetadataParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLogicModuleMetadataParamsWithContext(ctx context.Context) *GetLogicModuleMetadataParams {
	var ()
	return &GetLogicModuleMetadataParams{

		Context: ctx,
	}
}

// NewGetLogicModuleMetadataParamsWithHTTPClient creates a new GetLogicModuleMetadataParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLogicModuleMetadataParamsWithHTTPClient(client *http.Client) *GetLogicModuleMetadataParams {
	var ()
	return &GetLogicModuleMetadataParams{
		HTTPClient: client,
	}
}

/*GetLogicModuleMetadataParams contains all the parameters to send to the API endpoint
for the get logic module metadata operation typically these are written to a http.Request
*/
type GetLogicModuleMetadataParams struct {

	/*LMID
	  The ID of logicmodule

	*/
	LMID int32
	/*LMType
	  The type of logicmodule (datasource | eventsource)

	*/
	LMType string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) WithTimeout(timeout time.Duration) *GetLogicModuleMetadataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) WithContext(ctx context.Context) *GetLogicModuleMetadataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) WithHTTPClient(client *http.Client) *GetLogicModuleMetadataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLMID adds the lMID to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) WithLMID(lMID int32) *GetLogicModuleMetadataParams {
	o.SetLMID(lMID)
	return o
}

// SetLMID adds the lmId to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) SetLMID(lMID int32) {
	o.LMID = lMID
}

// WithLMType adds the lMType to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) WithLMType(lMType string) *GetLogicModuleMetadataParams {
	o.SetLMType(lMType)
	return o
}

// SetLMType adds the lmType to the get logic module metadata params
func (o *GetLogicModuleMetadataParams) SetLMType(lMType string) {
	o.LMType = lMType
}

// WriteToRequest writes these params to a swagger request
func (o *GetLogicModuleMetadataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param lmId
	if err := r.SetPathParam("lmId", swag.FormatInt32(o.LMID)); err != nil {
		return err
	}

	// path param lmType
	if err := r.SetPathParam("lmType", o.LMType); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
