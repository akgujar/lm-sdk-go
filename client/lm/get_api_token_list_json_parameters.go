// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAPITokenListJSONParams creates a new GetAPITokenListJSONParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAPITokenListJSONParams() *GetAPITokenListJSONParams {
	return &GetAPITokenListJSONParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPITokenListJSONParamsWithTimeout creates a new GetAPITokenListJSONParams object
// with the ability to set a timeout on a request.
func NewGetAPITokenListJSONParamsWithTimeout(timeout time.Duration) *GetAPITokenListJSONParams {
	return &GetAPITokenListJSONParams{
		timeout: timeout,
	}
}

// NewGetAPITokenListJSONParamsWithContext creates a new GetAPITokenListJSONParams object
// with the ability to set a context for a request.
func NewGetAPITokenListJSONParamsWithContext(ctx context.Context) *GetAPITokenListJSONParams {
	return &GetAPITokenListJSONParams{
		Context: ctx,
	}
}

// NewGetAPITokenListJSONParamsWithHTTPClient creates a new GetAPITokenListJSONParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAPITokenListJSONParamsWithHTTPClient(client *http.Client) *GetAPITokenListJSONParams {
	return &GetAPITokenListJSONParams{
		HTTPClient: client,
	}
}

/*
GetAPITokenListJSONParams contains all the parameters to send to the API endpoint

	for the get Api token list Json operation.

	Typically these are written to a http.Request.
*/
type GetAPITokenListJSONParams struct {

	// UserAgent.
	//
	// Default: "Logicmonitor/GO-SDK"
	UserAgent *string

	// Fields.
	Fields *string

	// Filter.
	Filter *string

	// Offset.
	//
	// Format: int32
	Offset *int32

	// Permission.
	Permission *string

	// Size.
	//
	// Format: int32
	// Default: 50
	Size *int32

	// Type.
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get Api token list Json params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPITokenListJSONParams) WithDefaults() *GetAPITokenListJSONParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get Api token list Json params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPITokenListJSONParams) SetDefaults() {
	var (
		userAgentDefault = string("Logicmonitor/GO-SDK")

		offsetDefault = int32(0)

		sizeDefault = int32(50)
	)

	val := GetAPITokenListJSONParams{
		UserAgent: &userAgentDefault,
		Offset:    &offsetDefault,
		Size:      &sizeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithTimeout(timeout time.Duration) *GetAPITokenListJSONParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithContext(ctx context.Context) *GetAPITokenListJSONParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithHTTPClient(client *http.Client) *GetAPITokenListJSONParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserAgent adds the userAgent to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithUserAgent(userAgent *string) *GetAPITokenListJSONParams {
	o.SetUserAgent(userAgent)
	return o
}

// SetUserAgent adds the userAgent to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetUserAgent(userAgent *string) {
	o.UserAgent = userAgent
}

// WithFields adds the fields to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithFields(fields *string) *GetAPITokenListJSONParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithFilter adds the filter to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithFilter(filter *string) *GetAPITokenListJSONParams {
	o.SetFilter(filter)
	return o
}

// SetFilter adds the filter to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetFilter(filter *string) {
	o.Filter = filter
}

// WithOffset adds the offset to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithOffset(offset *int32) *GetAPITokenListJSONParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithPermission adds the permission to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithPermission(permission *string) *GetAPITokenListJSONParams {
	o.SetPermission(permission)
	return o
}

// SetPermission adds the permission to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetPermission(permission *string) {
	o.Permission = permission
}

// WithSize adds the size to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithSize(size *int32) *GetAPITokenListJSONParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetSize(size *int32) {
	o.Size = size
}

// WithType adds the typeVar to the get Api token list Json params
func (o *GetAPITokenListJSONParams) WithType(typeVar *string) *GetAPITokenListJSONParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get Api token list Json params
func (o *GetAPITokenListJSONParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPITokenListJSONParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.UserAgent != nil {

		// header param User-Agent
		if err := r.SetHeaderParam("User-Agent", *o.UserAgent); err != nil {
			return err
		}
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string

		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {

			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}
	}

	if o.Filter != nil {

		// query param filter
		var qrFilter string

		if o.Filter != nil {
			qrFilter = *o.Filter
		}
		qFilter := qrFilter
		if qFilter != "" {

			if err := r.SetQueryParam("filter", qFilter); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Permission != nil {

		// query param permission
		var qrPermission string

		if o.Permission != nil {
			qrPermission = *o.Permission
		}
		qPermission := qrPermission
		if qPermission != "" {

			if err := r.SetQueryParam("permission", qPermission); err != nil {
				return err
			}
		}
	}

	if o.Size != nil {

		// query param size
		var qrSize int32

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Type != nil {

		// query param type
		var qrType string

		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {

			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
