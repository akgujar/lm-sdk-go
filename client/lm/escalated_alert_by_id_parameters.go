// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewEscalatedAlertByIDParams creates a new EscalatedAlertByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEscalatedAlertByIDParams() *EscalatedAlertByIDParams {
	return &EscalatedAlertByIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEscalatedAlertByIDParamsWithTimeout creates a new EscalatedAlertByIDParams object
// with the ability to set a timeout on a request.
func NewEscalatedAlertByIDParamsWithTimeout(timeout time.Duration) *EscalatedAlertByIDParams {
	return &EscalatedAlertByIDParams{
		timeout: timeout,
	}
}

// NewEscalatedAlertByIDParamsWithContext creates a new EscalatedAlertByIDParams object
// with the ability to set a context for a request.
func NewEscalatedAlertByIDParamsWithContext(ctx context.Context) *EscalatedAlertByIDParams {
	return &EscalatedAlertByIDParams{
		Context: ctx,
	}
}

// NewEscalatedAlertByIDParamsWithHTTPClient creates a new EscalatedAlertByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewEscalatedAlertByIDParamsWithHTTPClient(client *http.Client) *EscalatedAlertByIDParams {
	return &EscalatedAlertByIDParams{
		HTTPClient: client,
	}
}

/* EscalatedAlertByIDParams contains all the parameters to send to the API endpoint
   for the escalated alert by Id operation.

   Typically these are written to a http.Request.
*/
type EscalatedAlertByIDParams struct {

	// UserAgent.
	//
	// Default: "Logicmonitor/GO-SDK"
	UserAgent *string

	// ID.
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the escalated alert by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EscalatedAlertByIDParams) WithDefaults() *EscalatedAlertByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the escalated alert by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EscalatedAlertByIDParams) SetDefaults() {
	var (
		userAgentDefault = string("Logicmonitor/GO-SDK")
	)

	val := EscalatedAlertByIDParams{
		UserAgent: &userAgentDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) WithTimeout(timeout time.Duration) *EscalatedAlertByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) WithContext(ctx context.Context) *EscalatedAlertByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) WithHTTPClient(client *http.Client) *EscalatedAlertByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserAgent adds the userAgent to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) WithUserAgent(userAgent *string) *EscalatedAlertByIDParams {
	o.SetUserAgent(userAgent)
	return o
}

// SetUserAgent adds the userAgent to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) SetUserAgent(userAgent *string) {
	o.UserAgent = userAgent
}

// WithID adds the id to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) WithID(id string) *EscalatedAlertByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the escalated alert by Id params
func (o *EscalatedAlertByIDParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *EscalatedAlertByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.UserAgent != nil {

		// header param User-Agent
		if err := r.SetHeaderParam("User-Agent", *o.UserAgent); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
